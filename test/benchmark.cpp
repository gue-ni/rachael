#include <iostream>
#include <thread>
#include <vector>
#include <zconf.h>

int fib(int x){
    if (x == 0) return 0;
    if (x == 1) return 1;
    return fib(x-1) + fib(x-2);
}

int main(){


    std::vector<int> board = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
                              0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
                              0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
                              0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
                              0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
                              0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
                              0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
                              0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77};


    auto f = [](const std::vector<int>& squares){
        for (int sq : squares){
            sleep(1);
            //fib(sq);
        }
    };


    /*
    clock_t tic = clock();
    std::thread t1(f, std::vector<int>{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07});
    std::thread t2(f, std::vector<int>{0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47});
    t1.join();
    t2.join();
    clock_t toc = clock();
    printf("computation time: %f\n", (double)(toc - tic) / CLOCKS_PER_SEC);
     */



    clock_t tic1 = clock();
    f(std::vector<int>{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47});
    clock_t toc1 = clock();
    printf("computation time: %f\n", (double)(toc1 - tic1) / CLOCKS_PER_SEC);

    return 0;
}
